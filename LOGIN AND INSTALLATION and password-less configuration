//THIS DOCUMENT FOR THE ACCESSING UBUNTU MECHINE FROM LOCAL LINUX MECHINE.
I USING PERSONAL LAPTOP UBUNTU DESKTOP OPERATING SYSTEM.
Before do that check prerequisties
1.. check EC2 Mechine are up and runnig 
2.. keypair file location that stored location.
3.. copy in the text file ubuntu EC2 mechine DNS NAME AND private IP address.

instance-1
ec2-18-191-118-78.us-east-2.compute.amazonaws.com \\ mechine--1 public DNS ADDRESS
18.191.118.78 // public ip-mechine-1
172.31.40.212 // mechine--1 private IP-address.

instance-2
ec2-18-222-212-34.us-east-2.compute.amazonaws.com // mechine-- public DNS ADDRESS
18.222.212.34 // public --ip-mechine-2
172.31.47.131 // // mechine--2 private IP-address.

Check where saved the ubuntu.pem (keypair for accessing EC2 mechine)
Type this command sudo su
Give the sudo user password // because using ssh command also we require sudo privilages.

login
chmod 400 /path/my-key-pair.pem
ssh -i "ubuntu.pem" ubuntu@ec2-18-191-118-78.us-east-2.compute.amazonaws.com
example
Welcome to Ubuntu 16.04.5 LTS (GNU/Linux 4.4.0-1072-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  Get cloud support with Ubuntu Advantage Cloud Guest:
    http://www.ubuntu.com/business/services/cloud

0 packages can be updated.
0 updates are security updates.

New release '18.04.1 LTS' available.
Run 'do-release-upgrade' to upgrade to it.



The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

ubuntu@ip-172-31-40-212:~$ it will show like this

ssh -i "ubuntu.pem" ubuntu@ec2-18-222-212-34.us-east-2.compute.amazonaws.com

it will login without asking password because using sever public key.pem file

now im going to install few packages for supporting Devops tools.
1. install ssh package.
2. configure the ssh password-less access ( im going choosing the Ansible configuration Tools)
   which requires the ssh packages and ssh-passwordless access on other mechines because ansible is working principal is master service 
   of ansible running in on mechine as master but here ansible architecture it is not master-slave so that's way ansible process very speed.
   so that ansible is based on ssh .

apt-get install openssh-server in both mechines.
now add the host entries in /etc/hosts file
3.
vi /etc/hosts

172.31.40.212 ip-172-31-40-212.us-east-2.compute.internal MSR-test-Instance-1

172.31.47.131 ip-172-31-47-131.us-east-2.compute.internal MSR-test-Instance-2


save it the file

chech hostname also same are not.

4.
create the root passwd by default not set in instance launching time
    $ sudo passwd root //give password root.
    
5.
change file properties for accessing the root user another mechine without password by using ssh .

vi /etc/ssh/sshd_cofig
change the property in 
# Authentication:
LoginGraceTime 120
#PermitRootLogin prohibit-password
permitRootLogin yes
StrictModes yes
save it.

restart the ssh service 
sudo su /etc/init.d/ssh reload or service ssh restart.

6.
Generate the ssh key 
ssh-keygen -t rsa
root@ip-172-31-40-212:~/.ssh# ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:enBDs1Uhr6SxWNqzzpf01oAz7hgUIAuHwNC01J/c7Cg root@ip-172-31-40-212
The key's randomart image is:
+---[RSA 2048]----+
|=++oo .   . o.   |
| oo+.o .   +     |
|  . .o +* o .    |
|      +*oX .     |
|      +oS ..     |
|    E .=.+= .    |
|     .. +o = o   |
|       + o+ o .  |
|        +o..     |
+----[SHA256]-----+
root@ip-172-31-40-212:~/.ssh# ls
authorized_keys  id_rsa  id_rsa.pub
cat id_rsa.pub >> authorized_keys
login into mechine-2
do modify the as mechine-1 mentined configuration hosts entry list and sshd_config .
change root password of mechine-2
after in mechine-1 run the given command.

$ scp /root/.ssh/authorized_keys ubuntu@172.31.47.131 ip-172-31-47-131.us-east-2.compute.internal:/home/ubuntu/

//just copied this location and it aws mechine without affecting normal ubuntu login
run command in mechine-2 
$ cat /home/ubuntu/authorized_keys >> /root/.ssh/authorized_keys

test case
from mechine-1
run the below command
ssh root@172.31.47.131 ip-172-31-47-131.us-east-2.compute.internal
it will login into mechine-2

here ssh -password-less access finis

